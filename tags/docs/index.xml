<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docs on BiteTheDisk 小站</title>
    <link>https://bitethedisk.github.io/tags/docs/</link>
    <description>Recent content in Docs on BiteTheDisk 小站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-hans</language>
    <lastBuildDate>Sat, 19 Aug 2023 00:37:29 +0800</lastBuildDate><atom:link href="https://bitethedisk.github.io/tags/docs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Docs] 任务控制块</title>
      <link>https://bitethedisk.github.io/post/task_control_block/</link>
      <pubDate>Sat, 19 Aug 2023 00:37:29 +0800</pubDate>
      
      <guid>https://bitethedisk.github.io/post/task_control_block/</guid>
      <description>&lt;p&gt;应用程序的一次执行过程称为一个任务。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[Docs] 系统设计与整体架构</title>
      <link>https://bitethedisk.github.io/post/overall_architecture/</link>
      <pubDate>Sat, 19 Aug 2023 00:33:07 +0800</pubDate>
      
      <guid>https://bitethedisk.github.io/post/overall_architecture/</guid>
      <description>&lt;p&gt;RISC-V架构定义了4种特权级别，其中只有M模式是必须实现的，其余特权级别可以根据运行在CPU上的应用需求进行调整。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[Docs] 概述</title>
      <link>https://bitethedisk.github.io/post/overview/</link>
      <pubDate>Sat, 19 Aug 2023 00:30:10 +0800</pubDate>
      
      <guid>https://bitethedisk.github.io/post/overview/</guid>
      <description>&lt;p&gt;BTD-OS是一款基于 Rust 语言开发的宏内核操作系统，适用于 RISC-V64 平台。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[Docs] 文件系统优化历程</title>
      <link>https://bitethedisk.github.io/post/fs-optimization/</link>
      <pubDate>Thu, 17 Aug 2023 17:28:13 +0800</pubDate>
      
      <guid>https://bitethedisk.github.io/post/fs-optimization/</guid>
      <description>文件系统优化历程 我们在 FAT32 设计上，采用了 rCore-Tutorial easy-fs 相同的松耦合模块化设计思路，与底层设备驱动之间通过抽象接口 BlockDevice 来连接，避免了与设备驱动的绑定。FAT32 库通过 Rust 提供的 alloc crate 来隔离了操作系统内核的内存管理，避免了</description>
    </item>
    
  </channel>
</rss>
